// // 9.
// // Мальчик идет долгим путем со школы домой. Чтобы сделать прогулку веселее, он
// // складывает все номера домов, мимо которых проходит. К сожалению, не на всех
// // домах написаны номера, к тому же мальчик регулярно меняет улицы по очереди,
// // поэтому номера не представляются ему в определенном порядке.
// // В какой то момент во время прогулки мальчик встречает дом с написанным на
// // нем 0 номером. Это настолько его удивляет, что он перестает прибавлять числа к
// // своей сумме сразу после того, как видит этот дом.
// // Для заданной последовательности домов определите сумму, которую получит
// // мальчик. Гарантируется, что на пути всегда будет хотя бы один нулевой дом.
// // Добавить проверку, что номера домов только числа.
// // [5, 1, 2, 3, 0, 1, 5, 0, 2] ––> 11 (5 + 1 + 2 + 3 =11)


// // const arr = [null, 1, 2, 3, 0, 1, 5, 0, 2] ;

// // function isSumArr(arr){
// // try{

// //     let sum =0;
// //     for(let i=0;i<arr.length;i++){
// //         if(typeof(arr[i])!="number"){throw new TypeError};
// //         if(arr[i]!=0)
// //         {
// //         sum+=arr[i]
// //         }
// //         else{
// //             return sum;
// //         }
// //     }
// // }
// // catch(error){
// //     return error.Message;
// // }
// // }

// // alert(isSumArr(arr));


// // 10.
// // На вход подается строка в виде электронной почты пользователя. Необходимо
// // найти в данной почте “@”. Если же есть, то вывести булевое true, в противном
// // случае бросить исключение и его обработать


// const str = "kvskj@gmail.com";


// function isMail(str) {
//     try {
//         if (str.includes("@")) {
//             return true;
//         }
//         else{
//             throw new TypeError;
//         }
//     }
//     catch (error) {
//         return error.Message;
//     }
// }


// alert(isMail(str));


function Sum(number){
    
    return number+number;
}


let result = function(number1){
    return number1+number1;
}

let func = (number) => number+number;

