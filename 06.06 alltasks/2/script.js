
// 16. *На входе статичный массив [1, 2, 3, 4, 5, 6] и динамическое значение n.
// Необходимо разбить данный одномерный массив на маленькие массивы в
// зависимости от того, какого число ввел пользователь. Добавить проверки на ввод
// числа (значение n не должно быть больше длины массива, 0, пустая строка,
// строковый тип данных). Использовать любой цикл / метод перебора массива
// 1 -> [[1], [2], [3], [4], [5], [6]]
// 2 -> [[1, 2], [3, 4], [5, 6]]
// 3 -> [[1, 2, 3], [4, 5, 6]]
// 4 -> [[1, 2, 3, 4], [5, 6]
// 5 -> [[1, 2, 3, 4, 5], [6]]
// 6 -> [[1, 2, 3, 4, 5, 6]]

// let array = [1, 2, 3, 4, 5, 6];
// let n = +prompt();
// let resultArr = [];
// while (array.length > 0) {
//     let arr = [];
//     for (i = 0; i < n && array.length; i++) {

//         arr.push(array.shift());

//     }
//     resultArr.push(arr);
// }
// console.log(resultArr);


// let array = [1, 2, 3, 4, 5, 6];
// let n = +prompt();
// let resultArr = [];

// let arr = [];
// for (i = 0; i < array.length; i += n) {
//     arr.push(array.slice(i, i + n));
// }
// console.log(arr);



// 29. Напишите функцию, принимающую в качестве параметра статичный объект.
// Функция возвращает новый объект, где значения – исключительно числа
// первоначального объекта. IIFE

let obj = { name: 'test', test: 1 }
let result = (function (obj_) {
    let newObj = {};
    for (const key in obj_) {
        if (!isNaN(obj_[key])) {
            newObj[key] = obj_[key];
        }
    }
    return newObj;
}(obj));

console.log(result);

